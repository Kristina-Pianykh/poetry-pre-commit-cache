name: 'pre-commit'
description: 'Setting up poetry for installing Python dependencies and running pre-commit on changed files'
inputs:
  python-version:
    description: |
      Python version to use
      Default is 3.9.
    required: false
    default: '3.9'
  poetry-version:
    description: |
      Poetry version to use
      Default is 1.7.0.
    required: false
    default: '1.7.0'
  hooks-to-skip:
    description: |
      pre-commit hooks to skip
      should be passed with the comma separator
      e.g.: sqlfluff-fix,sqlfluff-lint,terraform_fmt,terrascan
      Default is run all pre-commit hooks.
    required: false
    default: ''
  cache-paths:
    description: |
      A list of files, directories, and wildcard patterns to cache.
      Default are .venv, ~/.local and ~/.cache/pre-commit.
    required: false
    default: |
        .venv
        ~/.local
        ~/.cache/pre-commit
  tflint-version:
    description: |
      The version of TFlint to install if any
      Default is skipping insllation of TFlint.
    required: false
    default: ''
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - id: random-number-generator
      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}
    - name: Restore cache
      id: restore-cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ inputs.cache-paths }}
        key: |
          venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}-poetry-${{ inputs.poetry-version }}
    - uses: snok/install-poetry@v1
      id: install-poetry
      if: steps.restore-cache.outputs.cache-hit != 'true'
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Install PY dependencies
      id: install-py-dependencies
      if: steps.restore-cache.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
      shell: bash
    - name: Install pre-commit hooks
      id: install-pre-commit-hooks
      if: steps.restore-cache.outputs.cache-hit != 'true'
      run: |
          source .venv/bin/activate
          pre-commit install-hooks
      shell: bash
    - uses: actions/cache/save@v3
      if: |
          steps.install-poetry.outcome == 'success' &&
          steps.install-py-dependencies.outcome == 'success' &&
          steps.install-pre-commit-hooks.outcome == 'success'
      with:
        path: ${{ inputs.cache-paths }}
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}
    - name: Setup TFLint
      if: ${{ inputs.tflint-version }} != ''
      id: setup-tflint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: ${{ inputs.tflint-version }}
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
    - name: List all changed files
      run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              echo "$file was changed"
          done
      shell: bash
    - name: Run pre-commit
      env:
        HOOKS_TO_SKIP: ${{ inputs.hooks-to-skip }}
      run: |
          source .venv/bin/activate
          SKIP=$HOOKS_TO_SKIP pre-commit run --files ${{ steps.changed-files.outputs.all_changed_files }}
      shell: bash
